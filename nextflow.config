params {
    help = false
    input = false
    
    registration_nb_threads = 4

    // ** Output Options ** //
    output_dir = "./results"
}

process {
    publishDir = {"${params.output_dir}/$meta.id/${task.process.split(':')[-1]}"}
    scratch = true
    errorStrategy = { task.attempt <= 3 ? 'retry' : 'ignore' }
    maxRetries = 3
    maxErrors = -1
    stageInMode = 'copy'
    stageOutMode = 'rsync'
    tag = { "$sid" }
    cache = 'lenient'

    withName: "CT_REGISTRATION_TO_MNI:CT_REGISTRATION:REGISTRATION_CT_TO_MNI" {
        ext.cpus = params.registration_nb_threads
        cpus = params.registration_nb_threads
    }
}

profiles {
    HPC {
        process {
            executor = 'slurm'
            errorStrategy = 'retry'
            maxRetries = 1
        }
        executor {
            pollInterval = '180 sec'
            queueGlobalStatus = true
            queueStatInterval = '3 min'
            submitRateLimit = '100/1min'
            maxForks = 1000
            queueSize = 1000
        }
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
}

manifest {
    name = 'CTReg-Flow'
    description = 'A Nextflow pipeline for CT registration to MNI space'
    version = '0.1-edge'
    homePage = 'https://github.com/llgneuroresearch/CTReg-Flow'
}